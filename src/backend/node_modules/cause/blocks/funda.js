'use strict';

var path = require('path');
var _ = require('lodash');
var request = require('request');
var sf = require('sf');
var cheerio = require('cheerio');
var $ = cheerio;


function prepare_item($item) {
	var $specs = $item.find('.specs');

	var data = {
		street: $specs.find('h3 a').first().text().replace(', Den Haag', '').replace(/[\n\r]/ig, '').trim(),
		price: $specs.find('.price-wrapper .price').text().replace('â‚¬', '').replace('.', '').trim(),
	};

	data.price = parseInt(data.price);
	data.source = 'funda';

	// make google maps url
	data.maps_url = cause.utils.misc.make_googlemaps_url(data.street);

	// prepare images
	// $imgs = $item.find('.figure li img');
	// data.images = [];
	// $imgs.each(function(index, elem) {
	// 	data.images.push($(elem).attr('src'));
	// });

	var $img = $item.find('img.photo');
	var img_url = $img.attr('src');
	var split = img_url.split('/');
	var tmpl = _.initial(split).join('/') + '/{0:000}_groot.jpg';
	var num = parseInt(_.last(split).split('_')[0]);
	var max_imgs = 5;
	_.range(max_imgs)
		.forEach(function() {
			num += 1;
			var url = sf(tmpl, num);
			data.images.push(url);
		});

	return data;
}


function fn(task, step, input, prev_step, done) {
	var cause = this;

	var url = sf('http://www.funda.nl/huur/{city}/{min_price}-{max_price}/{rooms}/{max_age}/{sort}/p{page}/', {
		min_price: step.options.min_price,
		max_price: step.options.max_price,
		city: 'den-haag',
		rooms: '2+kamers',
		max_age: '10-dagen',
		sort: 'sorteer-datum-af',
		page: 1
	});
	console.log(url);

	var req_opts = _.defaults(
		{ url: url },
		scraping.request_defaults()
	);

	request(req_opts, function(err, res, body) {
		if (err) { done(err); }

		var $ = cheerio.load(body);
		// var $items = $('ul.gallery-list > li');
		var $items = $('ul.object-list > li');
		console.log($items.length);
		var items = [];
		$items.each(function(index, elem) {
			var $item = $(elem);
			if ($item.hasClass('ad')) { return; }
			items.push(prepare_item($item));
		});
		// console.log(items);

		done(null, '');
	}).on('error', function(err) {
		cause.handle_error(err);
	});

	// cause.debug(
	// 	sf('{0} items, {1} new ones, {2} matches',
	// 		result.items.length,
	// 		result.new_items.length,
	// 		new_matches.length
	// 	)
	// );

	// var new_ones = (new_matches.length > 0);

	// var flow_decision = tasklib.flow_decision(new_ones);
	// var output = new_matches;
	// tasklib.invoke_children(step, task, output, flow_decision);

	// step.data.seen_guids = result.guids;
	// step.data.seen_pubdate = result.meta['pubdate'];
	// cause.save();
}


module.exports = {
	fn: fn,
	defaults: {
		options: {
			min_price: 0,
			max_price: 1000
		},
		data: {
			seen_pubdate: null,
			seen_guids: []
		},
		description: "funda.nl"
	}
};
