import processing.core.*; 
import processing.data.*; 
import processing.event.*; 
import processing.opengl.*; 

import de.looksgood.ani.*; 
import de.looksgood.ani.easing.*; 
import controlP5.*; 
import processing.pdf.*; 

import java.util.HashMap; 
import java.util.ArrayList; 
import java.io.File; 
import java.io.BufferedReader; 
import java.io.PrintWriter; 
import java.io.InputStream; 
import java.io.OutputStream; 
import java.io.IOException; 

public class sketch extends PApplet {






int w, h;
ControlP5 cp5;
boolean record = false;

float radius = 170;
float elem_angle = radians(35);
int num_elems = 14;
float opening_angle = radians(70);
int rect_w = 50;
int rect_h = 80;
float opacity = 200;
float x_rotation = 0;


public void setup() {
	w = 600;
	h = w;
	size(w, h, OPENGL);
	
	rectMode(CENTER);
	
	cp5 = new ControlP5(this);
	cp5.addSlider("radius", 0, w, radius, 10, 10, 100, 14);
	cp5.addSlider("elem_angle", 0, TWO_PI, elem_angle, 10, 10+1*15, 100, 14);
	cp5.addSlider("num_elems", 1, 100, num_elems, 10, 10+2*15, 100, 14);
	cp5.addSlider("rect_w", 1, 200, rect_w, 10, 10+3*15, 100, 14);
	cp5.addSlider("rect_h", 1, 200, rect_h, 10, 10+4*15, 100, 14);
	cp5.addSlider("opening_angle", 0, TWO_PI, opening_angle, 10, 10+5*15, 100, 14);
	cp5.addSlider("opacity", 0, 255, opacity, 10, 10+6*15, 100, 14);
	cp5.addSlider("x_rotation", 0, TWO_PI, x_rotation, 10, 10+7*15, 100, 14);
}


public void keyPressed() {
	if (key == ' ') {
		record = true;
	}
}


public void draw() {
	background(200);
	
	if (record) {
		beginRecord(PDF, "#########.pdf");
	}
	
	pushMatrix();
		translate(w * 0.5f, h * 0.5f);
		rotate(opening_angle * 0.5f);
		
		float angle_step = (TWO_PI - opening_angle) / num_elems;
		
		for (int i = 0; i < num_elems; i++) {
			rotate(angle_step);
			// fill(100, opacity);
			fill(255, 212, 0, opacity);
			noStroke();
			pushMatrix();
				translate(radius, 0);
				rotate(elem_angle);
				translate(0, rect_h*0.5f);				
				rotateX(x_rotation);
				rect(0, 0, rect_w, rect_h);
			popMatrix();
		}
	popMatrix();
	 
	if (record) {
		endRecord();
		record = false;
	}
}

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "sketch" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
